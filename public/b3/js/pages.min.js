! function($) {
    "use strict";
    var Pages = function() {
        this.VERSION = "2.3.0", this.AUTHOR = "Revox", this.SUPPORT = "support@revox.io", this.pageScrollElement = "html, body", this.$body = $("body"), this.setUserOS(), this.setUserAgent()
    };
    Pages.prototype.setUserOS = function() {
        var OSName = ""; - 1 != navigator.appVersion.indexOf("Win") && (OSName = "windows"), -1 != navigator.appVersion.indexOf("Mac") && (OSName = "mac"), -1 != navigator.appVersion.indexOf("X11") && (OSName = "unix"), -1 != navigator.appVersion.indexOf("Linux") && (OSName = "linux"), this.$body.addClass(OSName)
    }, Pages.prototype.setUserAgent = function() {
        navigator.userAgent.match(/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i) ? this.$body.addClass("mobile") : (this.$body.addClass("desktop"), navigator.userAgent.match(/MSIE 9.0/) && this.$body.addClass("ie9"))
    }, Pages.prototype.isVisibleXs = function() {
        return !$("#pg-visible-xs").length && this.$body.append('<div id="pg-visible-xs" class="visible-xs" />'), $("#pg-visible-xs").is(":visible")
    }, Pages.prototype.isVisibleSm = function() {
        return !$("#pg-visible-sm").length && this.$body.append('<div id="pg-visible-sm" class="visible-sm" />'), $("#pg-visible-sm").is(":visible")
    }, Pages.prototype.isVisibleMd = function() {
        return !$("#pg-visible-md").length && this.$body.append('<div id="pg-visible-md" class="visible-md" />'), $("#pg-visible-md").is(":visible")
    }, Pages.prototype.isVisibleLg = function() {
        return !$("#pg-visible-lg").length && this.$body.append('<div id="pg-visible-lg" class="visible-lg" />'), $("#pg-visible-lg").is(":visible")
    }, Pages.prototype.getUserAgent = function() {
        return $("body").hasClass("mobile") ? "mobile" : "desktop"
    }, Pages.prototype.setFullScreen = function(element) {
        var requestMethod = element.requestFullScreen || element.webkitRequestFullScreen || element.mozRequestFullScreen || element.msRequestFullscreen;
        if (requestMethod) requestMethod.call(element);
        else if ("undefined" != typeof window.ActiveXObject) {
            var wscript = new ActiveXObject("WScript.Shell");
            null !== wscript && wscript.SendKeys("{F11}")
        }
    }, Pages.prototype.getColor = function(color, opacity) {
        opacity = parseFloat(opacity) || 1;
        var elem = $(".pg-colors").length ? $(".pg-colors") : $('<div class="pg-colors"></div>').appendTo("body"),
            colorElem = elem.find('[data-color="' + color + '"]').length ? elem.find('[data-color="' + color + '"]') : $('<div class="bg-' + color + '" data-color="' + color + '"></div>').appendTo(elem),
            color = colorElem.css("background-color"),
            rgb = color.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/),
            rgba = "rgba(" + rgb[1] + ", " + rgb[2] + ", " + rgb[3] + ", " + opacity + ")";
        return rgba
    }, Pages.prototype.initSidebar = function(context) {
        $('[data-pages="sidebar"]', context).each(function() {
            var $sidebar = $(this);
            $sidebar.sidebar($sidebar.data())
        })
    }, Pages.prototype.initDropDown = function(context) {
        $(".dropdown-default", context).each(function() {
            var btn = $(this).find(".dropdown-menu").siblings(".dropdown-toggle"),
                offset = 0,
                menuWidth = $(this).find(".dropdown-menu").actual("outerWidth");
            btn.actual("outerWidth") < menuWidth ? (btn.width(menuWidth - offset), $(this).find(".dropdown-menu").width(btn.actual("outerWidth"))) : $(this).find(".dropdown-menu").width(btn.actual("outerWidth"))
        })
    }, Pages.prototype.initFormGroupDefault = function(context) {
        $(".form-group.form-group-default", context).click(function() {
            $(this).find("input").focus()
        }), this.initFormGroupDefaultRun || ($("body").on("focus", ".form-group.form-group-default :input", function() {
            $(".form-group.form-group-default").removeClass("focused"), $(this).parents(".form-group").addClass("focused")
        }), $("body").on("blur", ".form-group.form-group-default :input", function() {
            $(this).parents(".form-group").removeClass("focused"), $(this).val() ? $(this).closest(".form-group").find("label").addClass("fade") : $(this).closest(".form-group").find("label").removeClass("fade")
        }), this.initFormGroupDefaultRun = !0), $(".form-group.form-group-default .checkbox, .form-group.form-group-default .radio", context).hover(function() {
            $(this).parents(".form-group").addClass("focused")
        }, function() {
            $(this).parents(".form-group").removeClass("focused")
        })
    }, Pages.prototype.initSlidingTabs = function(context) {
        $('a[data-toggle="tab"]', context).on("show.bs.tab", function(e) {
            e = $(e.target).parent().find("a[data-toggle=tab]");
            var hrefCurrent = (e.attr("href"), e.attr("href"));
            $(hrefCurrent).is(".slide-left, .slide-right") && ($(hrefCurrent).addClass("sliding"), setTimeout(function() {
                $(hrefCurrent).removeClass("sliding")
            }, 100))
        })
    }, Pages.prototype.reponsiveTabs = function() {
        $('[data-init-reponsive-tabs="dropdownfx"]').each(function() {
            var drop = $(this);
            drop.addClass("hidden-sm hidden-xs");
            for (var content = '<select class="cs-select cs-skin-slide full-width" data-init-plugin="cs-select">', i = 1; i <= drop.children("li").length; i++) {
                var li = drop.children("li:nth-child(" + i + ")"),
                    selected = "";
                li.hasClass("active") && (selected = "selected"), content += '<option value="' + li.children("a").attr("href") + '" ' + selected + ">", content += li.children("a").text(), content += "</option>"
            }
            content += "</select>", drop.after(content);
            var select = drop.next()[0];
            $(select).on("change", function(e) {
                var valueSelected = ($("option:selected", this), this.value);
                drop.find('a[href="' + valueSelected + '"]').tab("show")
            }), $(select).wrap('<div class="nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm"></div>'), new SelectFx(select)
        }), $.fn.tabCollapse && $('[data-init-reponsive-tabs="collapse"]').tabCollapse()
    }, Pages.prototype.initNotificationCenter = function() {
        $("body").on("click", ".notification-list .dropdown-menu", function(event) {
            event.stopPropagation()
        }), $("body").on("click", ".toggle-more-details", function(event) {
            var p = $(this).closest(".heading");
            p.closest(".heading").children(".more-details").stop().slideToggle("fast", function() {
                p.toggleClass("open")
            })
        })
    }, Pages.prototype.initProgressBars = function() {
        $(window).on("load", function() {
            $(".progress-bar-indeterminate, .progress-circle-indeterminate, .mapplic-pin").hide().show(0)
        })
    }, Pages.prototype.initInputFile = function() {
        $(document).on("change", ".btn-file :file", function() {
            var input = $(this),
                numFiles = input.get(0).files ? input.get(0).files.length : 1,
                label = input.val().replace(/\\/g, "/").replace(/.*\//, "");
            input.trigger("fileselect", [numFiles, label])
        }), $(".btn-file :file").on("fileselect", function(event, numFiles, label) {
            var input = $(this).parents(".input-group").find(":text"),
                log = numFiles > 1 ? numFiles + " files selected" : label;
            input.length ? input.val(log) : $(this).parent().html(log)
        })
    }, Pages.prototype.initHorizontalMenu = function() {
        $(document).on("click", ".horizontal-menu .bar-inner > ul > li", function() {
            $(this).toggleClass("open").siblings().removeClass("open")
        }), $(".content").on("click", function() {
            $(".horizontal-menu .bar-inner > ul > li").removeClass("open")
        }), $('[data-pages="horizontal-menu-toggle"]').on("click touchstart", function(e) {
            e.preventDefault(), $("body").toggleClass("menu-opened")
        })
    }, Pages.prototype.initTooltipPlugin = function(context) {
        $.fn.tooltip && $('[data-toggle="tooltip"]', context).tooltip()
    }, Pages.prototype.initSelect2Plugin = function(context) {
        $.fn.select2 && $('[data-init-plugin="select2"]', context).each(function() {
            $(this).select2({
                minimumResultsForSearch: "true" == $(this).attr("data-disable-search") ? -1 : 1
            }).on("select2:open", function() {
                $.fn.scrollbar && $(".select2-results__options").scrollbar({
                    ignoreMobile: !1
                })
            })
        })
    }, Pages.prototype.initScrollBarPlugin = function(context) {
        $.fn.scrollbar && $(".scrollable", context).scrollbar({
            ignoreOverlay: !1
        })
    }, Pages.prototype.initListView = function(context) {
        $.fn.ioslist && $('[data-init-list-view="ioslist"]', context).ioslist(), $.fn.scrollbar && $(".list-view-wrapper", context).scrollbar({
            ignoreOverlay: !1
        })
    }, Pages.prototype.initSwitcheryPlugin = function(context) {
        window.Switchery && $('[data-init-plugin="switchery"]', context).each(function() {
            var el = $(this);
            new Switchery(el.get(0), {
                color: null != el.data("color") ? $.Pages.getColor(el.data("color")) : $.Pages.getColor("success"),
                size: null != el.data("size") ? el.data("size") : "default"
            })
        })
    }, Pages.prototype.initSelectFxPlugin = function(context) {
        window.SelectFx && $('select[data-init-plugin="cs-select"]', context).each(function() {
            var el = $(this).get(0);
            $(el).wrap('<div class="cs-wrapper"></div>'), new SelectFx(el)
        })
    }, Pages.prototype.initUnveilPlugin = function(context) {
        $.fn.unveil && $("img", context).unveil()
    }, Pages.prototype.initValidatorPlugin = function() {
        $.validator && $.validator.setDefaults({
            ignore: "",
            showErrors: function(errorMap, errorList) {
                var $this = this;
                return $.each(this.successList, function(index, value) {
                    var parent = $(this).closest(".form-group-attached");
                    return parent.length ? $(value).popover("hide") : void 0
                }), $.each(errorList, function(index, value) {
                    var parent = $(value.element).closest(".form-group-attached");
                    if (!parent.length) return $this.defaultShowErrors();
                    var _popover;
                    _popover = $(value.element).popover({
                        trigger: "manual",
                        placement: "top",
                        html: !0,
                        container: parent.closest("form"),
                        content: value.message
                    }), _popover.data("bs.popover").options.content = value.message;
                    var parent = $(value.element).closest(".form-group");
                    parent.addClass("has-error"), $(value.element).popover("show")
                })
            },
            onfocusout: function(element) {
                var parent = $(element).closest(".form-group");
                $(element).valid() && (parent.removeClass("has-error"), parent.next(".error").remove())
            },
            onkeyup: function(element) {
                var parent = $(element).closest(".form-group");
                $(element).valid() ? ($(element).removeClass("error"), parent.removeClass("has-error"), parent.next("label.error").remove(), parent.find("label.error").remove()) : parent.addClass("has-error")
            },
            errorPlacement: function(error, element) {
                var parent = $(element).closest(".form-group");
                parent.hasClass("form-group-default") ? (parent.addClass("has-error"), error.insertAfter(parent)) : error.insertAfter(element)
            }
        })
    }, Pages.prototype.init = function() {
        this.initSidebar(), this.initDropDown(), this.initFormGroupDefault(), this.initSlidingTabs(), this.initNotificationCenter(), this.initProgressBars(), this.initHorizontalMenu(), this.initTooltipPlugin(), this.initSelect2Plugin(), this.initScrollBarPlugin(), this.initSwitcheryPlugin(), this.initSelectFxPlugin(), this.initUnveilPlugin(), this.initValidatorPlugin(), this.initListView(), this.initInputFile(), this.reponsiveTabs()
    }, $.Pages = new Pages, $.Pages.Constructor = Pages
}(window.jQuery),
function($) {
    "use strict";

    function Plugin(option) {
        return this.each(function() {
            var $this = $(this),
                data = $this.data("pg.sidebar"),
                options = "object" == typeof option && option;
            data || $this.data("pg.sidebar", data = new Sidebar(this, options)), "string" == typeof option && data[option]()
        })
    }
    var Sidebar = function(element, options) {
        function sidebarMouseEnter(e) {
            var _sideBarWidthCondensed = _this.$body.hasClass("rtl") ? -_this.sideBarWidthCondensed : _this.sideBarWidthCondensed,
                menuOpenCSS = 1 == this.css3d ? "translate3d(" + _sideBarWidthCondensed + "px, 0,0)" : "translate(" + _sideBarWidthCondensed + "px, 0)";
            return $.Pages.isVisibleSm() || $.Pages.isVisibleXs() ? !1 : void($(".close-sidebar").data("clicked") || _this.$body.hasClass("menu-pin") || (_this.cssAnimation ? (_this.$element.css({
                transform: menuOpenCSS
            }), _this.$body.addClass("sidebar-visible")) : _this.$element.stop().animate({
                left: "0px"
            }, 400, $.bez(_this.bezierEasing), function() {
                _this.$body.addClass("sidebar-visible")
            })))
        }

        function sidebarMouseLeave(e) {
            var menuClosedCSS = 1 == _this.css3d ? "translate3d(0, 0,0)" : "translate(0, 0)";
            if ($.Pages.isVisibleSm() || $.Pages.isVisibleXs()) return !1;
            if ("undefined" != typeof e) {
                var target = $(e.target);
                if (target.parent(".page-sidebar").length) return
            }
            _this.$body.hasClass("menu-pin") || ($(".sidebar-overlay-slide").hasClass("show") && ($(".sidebar-overlay-slide").removeClass("show"), $("[data-pages-toggle']").removeClass("active")), _this.cssAnimation ? (_this.$element.css({
                transform: menuClosedCSS
            }), _this.$body.removeClass("sidebar-visible")) : _this.$element.stop().animate({
                left: "-" + _this.sideBarWidthCondensed + "px"
            }, 400, $.bez(_this.bezierEasing), function() {
                _this.$body.removeClass("sidebar-visible"), setTimeout(function() {
                    $(".close-sidebar").data({
                        clicked: !1
                    })
                }, 100)
            }))
        }
        if (this.$element = $(element), this.$body = $("body"), this.options = $.extend(!0, {}, $.fn.sidebar.defaults, options), this.bezierEasing = [.05, .74, .27, .99], this.cssAnimation = !0, this.css3d = !0, this.sideBarWidth = 280, this.sideBarWidthCondensed = 210, this.$sidebarMenu = this.$element.find(".sidebar-menu > ul"), this.$pageContainer = $(this.options.pageContainer), this.$sidebarMenu.length) {
            "desktop" == $.Pages.getUserAgent() && this.$sidebarMenu.scrollbar({
                ignoreOverlay: !1,
                disableBodyScroll: 1 == this.$element.data("disableBodyScroll") ? !0 : !1
            }), Modernizr.csstransitions || (this.cssAnimation = !1), Modernizr.csstransforms3d || (this.css3d = !1), "undefined" == typeof angular && $(document).on("click", ".sidebar-menu a", function(e) {
                if ($(this).parent().children(".sub-menu") !== !1) {
                    var el = $(this),
                        parent = $(this).parent().parent(),
                        li = $(this).parent(),
                        sub = $(this).parent().children(".sub-menu");
                    li.hasClass("open active") ? (el.children(".arrow").removeClass("open active"), sub.slideUp(200, function() {
                        li.removeClass("open active")
                    })) : (parent.children("li.open").children(".sub-menu").slideUp(200), parent.children("li.open").children("a").children(".arrow").removeClass("open active"), parent.children("li.open").removeClass("open active"), el.children(".arrow").addClass("open active"), sub.slideDown(200, function() {
                        li.addClass("open active")
                    }))
                }
            }), $(".sidebar-slide-toggle").on("click touchend", function(e) {
                e.preventDefault(), $(this).toggleClass("active");
                var el = $(this).attr("data-pages-toggle");
                null != el && $(el).toggleClass("show")
            });
            var _this = this;
            this.$element.bind("mouseenter mouseleave", sidebarMouseEnter), this.$pageContainer.bind("mouseover", sidebarMouseLeave)
        }
    };
    Sidebar.prototype.toggleSidebar = function(toggle) {
        var timer, bodyColor = $("body").css("background-color");
        $(".page-container").css("background-color", bodyColor), this.$body.hasClass("sidebar-open") ? (this.$body.removeClass("sidebar-open"), timer = setTimeout(function() {
            this.$element.removeClass("visible")
        }.bind(this), 400)) : (clearTimeout(timer), this.$element.addClass("visible"), setTimeout(function() {
            this.$body.addClass("sidebar-open")
        }.bind(this), 10), setTimeout(function() {
            $(".page-container").css({
                "background-color": ""
            })
        }, 1e3))
    }, Sidebar.prototype.togglePinSidebar = function(toggle) {
        "hide" == toggle ? this.$body.removeClass("menu-pin") : "show" == toggle ? this.$body.addClass("menu-pin") : this.$body.toggleClass("menu-pin")
    };
    var old = $.fn.sidebar;
    $.fn.sidebar = Plugin, $.fn.sidebar.Constructor = Sidebar, $.fn.sidebar.defaults = {
        pageContainer: ".page-container"
    }, $.fn.sidebar.noConflict = function() {
        return $.fn.sidebar = old, this
    }, $(document).on("click.pg.sidebar.data-api", '[data-toggle-pin="sidebar"]', function(e) {
        e.preventDefault();
        var $target = ($(this), $('[data-pages="sidebar"]'));
        return $target.data("pg.sidebar").togglePinSidebar(), !1
    }), $(document).on("click.pg.sidebar.data-api touchstart", '[data-toggle="sidebar"]', function(e) {
        e.preventDefault();
        var $target = ($(this), $('[data-pages="sidebar"]'));
        return $target.data("pg.sidebar").toggleSidebar(), !1
    })
}(window.jQuery),

function($) {
    "use strict";
    "undefined" == typeof angular && $.Pages.init()
}(window.jQuery);
